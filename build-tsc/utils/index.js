"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.copyValidations = exports.copyMath = exports.copyObject = exports.copyPrimitive = exports.copySymbol = exports.copyRegExp = exports.copySet = exports.copyMap = exports.copyDate = exports.copyTypedArray = exports.copyArray = exports.isMath = exports.isProxy = exports.isRegExp = exports.isSymbol = exports.isDate = exports.isSet = exports.isMap = exports.isTypedArray = exports.isArrayBuffer = exports.isArray = exports.isObject = exports.isFunction = exports.constructorName = exports.isNullish = exports.isPrimitive = void 0;
var isPrimitive_1 = require("./isPrimitive");
Object.defineProperty(exports, "isPrimitive", { enumerable: true, get: function () { return isPrimitive_1.isPrimitive; } });
var isNulllish_1 = require("./isNulllish");
Object.defineProperty(exports, "isNullish", { enumerable: true, get: function () { return isNulllish_1.isNullish; } });
var validations_1 = require("./validations");
Object.defineProperty(exports, "constructorName", { enumerable: true, get: function () { return validations_1.constructorName; } });
Object.defineProperty(exports, "isFunction", { enumerable: true, get: function () { return validations_1.isFunction; } });
Object.defineProperty(exports, "isObject", { enumerable: true, get: function () { return validations_1.isObject; } });
Object.defineProperty(exports, "isArray", { enumerable: true, get: function () { return validations_1.isArray; } });
Object.defineProperty(exports, "isArrayBuffer", { enumerable: true, get: function () { return validations_1.isArrayBuffer; } });
Object.defineProperty(exports, "isTypedArray", { enumerable: true, get: function () { return validations_1.isTypedArray; } });
Object.defineProperty(exports, "isMap", { enumerable: true, get: function () { return validations_1.isMap; } });
Object.defineProperty(exports, "isSet", { enumerable: true, get: function () { return validations_1.isSet; } });
Object.defineProperty(exports, "isDate", { enumerable: true, get: function () { return validations_1.isDate; } });
Object.defineProperty(exports, "isSymbol", { enumerable: true, get: function () { return validations_1.isSymbol; } });
Object.defineProperty(exports, "isRegExp", { enumerable: true, get: function () { return validations_1.isRegExp; } });
Object.defineProperty(exports, "isProxy", { enumerable: true, get: function () { return validations_1.isProxy; } });
Object.defineProperty(exports, "isMath", { enumerable: true, get: function () { return validations_1.isMath; } });
var copyMethods_1 = require("./copyMethods");
Object.defineProperty(exports, "copyArray", { enumerable: true, get: function () { return copyMethods_1.copyArray; } });
Object.defineProperty(exports, "copyTypedArray", { enumerable: true, get: function () { return copyMethods_1.copyTypedArray; } });
Object.defineProperty(exports, "copyDate", { enumerable: true, get: function () { return copyMethods_1.copyDate; } });
Object.defineProperty(exports, "copyMap", { enumerable: true, get: function () { return copyMethods_1.copyMap; } });
Object.defineProperty(exports, "copySet", { enumerable: true, get: function () { return copyMethods_1.copySet; } });
Object.defineProperty(exports, "copyRegExp", { enumerable: true, get: function () { return copyMethods_1.copyRegExp; } });
Object.defineProperty(exports, "copySymbol", { enumerable: true, get: function () { return copyMethods_1.copySymbol; } });
Object.defineProperty(exports, "copyPrimitive", { enumerable: true, get: function () { return copyMethods_1.copyPrimitive; } });
Object.defineProperty(exports, "copyObject", { enumerable: true, get: function () { return copyMethods_1.copyObject; } });
Object.defineProperty(exports, "copyMath", { enumerable: true, get: function () { return copyMethods_1.copyMath; } });
var copyValidations_1 = require("./copyValidations");
Object.defineProperty(exports, "copyValidations", { enumerable: true, get: function () { return copyValidations_1.copyValidations; } });
//# sourceMappingURL=index.js.map