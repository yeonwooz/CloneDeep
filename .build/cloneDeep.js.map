{
  "version": 3,
  "sources": ["../cloneDeep.ts"],
  "sourcesContent": ["function cloneDeep(value: any) {\n  if (value === null || value === undefined) {\n    return value\n  }\n\n  if (['string', 'number', 'boolean'].includes(typeof value)) {\n    return value\n  }\n\n  if (typeof value === 'function') {\n    if (value.assign) {\n      return {}\n    }\n    \n    return value\n  }\n  \n  if (typeof value === 'object' && value.length) {\n    if (Object.keys(value).length === 0) {\n      return {}\n    }\n    \n    const arr: any[] = []\n    value.length > 0 && value.forEach(element => {\n      const returnedValue = cloneDeep(element)\n      arr.push(returnedValue)\n    })\n\n    return arr\n  }\n  \n  let copiedValue: any = {}\n\n  if (typeof value === 'object') {\n    if (Object.keys(value).length === 0) {\n      return {}\n    }\n\n    for (const key in value) {\n      const returnedValue = cloneDeep(value[key])\n      copiedValue[key] = returnedValue\n    }\n\n    return copiedValue\n  }\n\n  return value\n}\n\nexport {cloneDeep};"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAmB,OAAY;AAC7B,MAAI,UAAU,QAAQ,UAAU,QAAW;AACzC,WAAO;AAAA;AAGT,MAAI,CAAC,UAAU,UAAU,WAAW,SAAS,OAAO,QAAQ;AAC1D,WAAO;AAAA;AAGT,MAAI,OAAO,UAAU,YAAY;AAC/B,QAAI,MAAM,QAAQ;AAChB,aAAO;AAAA;AAGT,WAAO;AAAA;AAGT,MAAI,OAAO,UAAU,YAAY,MAAM,QAAQ;AAC7C,QAAI,OAAO,KAAK,OAAO,WAAW,GAAG;AACnC,aAAO;AAAA;AAGT,UAAM,MAAa;AACnB,UAAM,SAAS,KAAK,MAAM,QAAQ,aAAW;AAC3C,YAAM,gBAAgB,UAAU;AAChC,UAAI,KAAK;AAAA;AAGX,WAAO;AAAA;AAGT,MAAI,cAAmB;AAEvB,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,OAAO,KAAK,OAAO,WAAW,GAAG;AACnC,aAAO;AAAA;AAGT,eAAW,OAAO,OAAO;AACvB,YAAM,gBAAgB,UAAU,MAAM;AACtC,kBAAY,OAAO;AAAA;AAGrB,WAAO;AAAA;AAGT,SAAO;AAAA;",
  "names": []
}
